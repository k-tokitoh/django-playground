name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  # terraformでのタスク定義の記述と一致する必要がある
  AWS_REGION: us-east-1
  ECR_REPOSITORY: django-playground
  ECS_SERVICE: django-playground
  ECS_CLUSTER: djangoPlayground-dev-ecsCluster
  CONTAINER_NAME_APP: django-playground-app

  # 一時的にタスク定義の内容を表現するjsonファイルを保存するpath
  ECS_TASK_DEFINITION_APP: task-definition/app.json

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . -f Dockerfile.prod
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Download task definition for application
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.CONTAINER_NAME_APP }} --query taskDefinition > ${{ env.ECS_TASK_DEFINITION_APP }}

      - name: Fill in the new image ID in the Amazon ECS task definition for application
        id: task-def-app
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_APP }}
          container-name: ${{ env.CONTAINER_NAME_APP }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition for application
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def-app.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
